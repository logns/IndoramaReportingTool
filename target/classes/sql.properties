#Generated by Eclipse Messages Editor (Eclipse Babel)
######SQL QUERIES########

delete_users = DELETE FROM USERS WHERE id= :id

delete_users_email = DELETE FROM USERS WHERE username= :emailID

#DAILYLOG_QUERIES 
insert_dailylog = insert into dailylog (dates, shift, machine, description, \
                  timefrom, timeto, spareparts, attendby, jobtype, recordtype, \
                  status) values (:dates, :shift, :machine, :description, \
                  :timefrom, :timeto, :spareparts, :attendby, :jobtype, \
                  :recordtype, :status)

insert_dailylog_bu = insert into dailylog_bu (bu_id, dailylog_id) values \
                     ((select id from bu where bu_name= :bu_name), \
                     :dailylog_id)

insert_dailylog_users = insert into dailylog_users (users_id, dailylog_id) \
                        values ((select id from users where realname= \
                        :realname), :dailylog_id)

insert_user_bu = insert into users_bu(users_id, bu_id) values (:users_id, \
                 (select id from bu where bu_name= :bu_name))

insert_user_departments = insert into users_departments(users_id, \
                          departments_id) values (:users_id, (select id from \
                          departments where department_name= :department_name))

#USER_QUERIES
insert_users = insert into users (username, realname, phone,address, state, \
               city, zipcode, birthdate) values (:username, :realname, :phone, \
               :address, :state, :city, :zipcode, :birthdate)

insert_users_roleid = insert into users_roles(users_id, roles_id) values \
                      (:users_id, roles_id)

#ROLE_QUERIES 
insert_users_roles = insert into users_roles(users_id, roles_id) values \
                     (:users_id, (select id from roles where role= :role))

#BU_QUERIES
select_bu_all = select * from bu

select_dailylogs_all = SELECT \
                                                                                                                                                                                        ype, \
                                              ilylog.status FROM indorama_poly.dailylog_bu\u0009INNER \
                       JOIN indorama_poly.dailylog ON \
                       indorama_poly.dailylog_bu.dailylog_id = \
                       indorama_poly.dailylog.id INNER JOIN indorama_poly.bu \
                       ON  indorama_poly.dailylog_bu.bu_id = \
                       indorama_poly.bu.id

#DEPARTMENT_QUERIES
select_departments_all = select * from departments

select_realname = SELECT realname FROM indorama_poly.users

select_role_byuserid = select role from roles join users_roles on roles.id = \
                       users_roles.roles_id where users_roles.users_id= \
                       :users_id

select_roles_all = select * from roles

select_users = SELECT * FROM users

select_users_exists = SELECT count(username) FROM users WHERE username= \
                      :username

select_users_id = SELECT * FROM users WHERE id= :id

select_users_username = SELECT * FROM users WHERE username= :username

select_usersbu_all = select users.id as usersId, realname, username, phone, \
                     birthdate, enabled, notification, address, city, state, \
                     zipcode, bu.id as buId, bu_name from users join users_bu \
                     on users.id = users_bu.users_id join bu on users_bu.bu_id \
                     = bu.id

update_bu_byuser = update users inner join users_bu on users_bu.users_id = \
                   users.id  set users_bu.bu_id = (select id from bu where \
                   bu_name= :bu_name) where users.username= :username

update_departments_byuser = update users inner join users_departments on \
                            users_departments.users_id = users.id  set \
                            users_departments.departments_id = (select id from \
                            departments where department_name= \
                            :department_name) where users.username= :username

update_roles_byuser = update users inner join users_roles on \
                      users_roles.users_id = users.id  set \
                      users_roles.roles_id = (select id from roles where role= \
                      :role) where users.username= :username

update_users = update users set realname= :realname, phone= :phone, state= \
               :state, city= :city,zipcode= :zipcode, address= :address, \
               notification= :notification, enabled= :enabled where username= \
               :username

update_users_device = update users set device= :device where username= \
                      :username
