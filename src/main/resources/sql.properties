#Generated by Eclipse Messages Editor (Eclipse Babel)
######SQL QUERIES########

delete_assign_task_by_id = delete from assign_task where id= :id

delete_assign_task_by_title = delete from assign_task where title= :title

delete_by_assign_task_id = delete from indorama_poly.dailylog where \
                           assign_task_id= :assign_task_id ;

delete_users = DELETE FROM USERS WHERE id= :id

delete_users_email = DELETE FROM USERS WHERE username= :emailID

# ASSIGN_TASK_QUERIES
insert_assign_task = insert into indorama_poly.assign_task(title, assigned_to, \
                     priority, target_date, done_percentage, created_by) \
                     values(:title, :assigned_to, :priority, :target_date, \
                     :done_percentage, :created_by) 

# ASSIGN_TASK_DAILYLOG_QUERIES
insert_assign_task_dailylog = insert into assign_task_dailylog(assign_task_id, \
                              dailylog_id) values(:assign_task_id, \
                              :dailylog_id);

#DAILYLOG_QUERIES 
insert_dailylog = insert into  dailylog(assign_task_id, target_date, shift, \
                  machine, description, timefrom, timeto, spare_parts, \
                  attendby, jobtype, recordtype, status,done_percentage) \
                  values(:assign_task_id, :target_date, :shift, :machine, \
                  :description, :timefrom, :timeto, :spare_parts, :attendby, \
                  :jobtype, :recordtype, :status, :done_percentage); 

insert_dailylog_bu = insert into dailylog_bu (dailylog_id,bu_id) values ( \
                     :dailylog_id, :bu_id)

insert_dailylog_users = insert into dailylog_users(users_id,dailylog_id) \
                        values ((select id from users where username= \
                        :username),:dailylog_id )

#PASSWORDCHANGEREQUESTS_QUERIES
insert_passwordchangerequests = insert into password_change_requests(hash_id, \
                                time,users_id,no_of_attempts)values(:hash_id, \
                                :time, :users_id, :no_of_attempts); 

#USER_QUERIES 
insert_user_bu = insert into users_bu(users_id, bu_id) values (:users_id, \
                 (select id from bu where bu_name= :bu_name))

insert_users = insert into users (username, realname, phone,address, state, \
               city, zipcode, birthdate,password) values (:username, \
               :realname, :phone, :address, :state, :city, :zipcode, \
               :birthdate, :password)

insert_users_roleid = insert into users_roles(users_id, roles_id) values \
                      (:users_id, roles_id)

#ROLE_QUERIES 
insert_users_roles = insert into users_roles(users_id, roles_id) values \
                     (:users_id, (select id from roles where role= :role))

selecr_pcr_users_id = SELECT * FROM password_change_requests WHERE users_id= \
                      :users_id

select_all_assigntask = SELECT assign_task.id, assign_task.title, \
                        assign_task.created_by, assign_task.target_date, \
                        dailylog.status, \
                        assign_task.priority,assign_task.done_percentage, \
                        assign_task.assigned_to  from assign_task join \
                        dailylog on  assign_task.id= dailylog.assign_task_id \
                        join dailylog_users on dailylog.id= \
                        dailylog_users.dailylog_id join users on  \
                        dailylog_users.users_id = users.id;

select_all_pcr = SELECT * FROM password_change_requests;

select_assigntask_by_dashboard_username = select assign_task.id, \
                                          assign_task.title, \
                                          assign_task.created_by, \
                                          assign_task.target_date, \
                                          dailylog.status as status,  \
                                          assign_task.assigned_to, \
                                          assign_task.priority, \
                                          assign_task.done_percentage from \
                                          assign_task join dailylog on  \
                                          assign_task.id= \
                                          dailylog.assign_task_id join \
                                          dailylog_users on dailylog.id= \
                                          dailylog_users.dailylog_id join \
                                          users on  dailylog_users.users_id = \
                                          users.id where users.username= \
                                          :username;

select_assigntask_by_id = SELECT * FROM indorama_poly.assign_task where id= :id

select_assigntask_by_title = SELECT * FROM indorama_poly.assign_task where \
                             title= :title;

select_assigntask_by_username = SELECT assign_task.id, title FROM \
                                indorama_poly.assign_task join users on \
                                assign_task.assigned_to=users.realname where \
                                users.username= :username;

select_assigntask_getcount = select count(*) from assign_task;

select_assigntask_id = SELECT  dailylog.id, dailylog.assign_task_id, \
                       dailylog.target_date, dailylog.shift, dailylog.machine, \
                       dailylog.description,\n dailylog.timefrom, \
                       dailylog.last_edit, dailylog.timeto, \
                       dailylog.spare_parts, dailylog.attendby, \
                       dailylog.jobtype, dailylog.recordtype, \
                       dailylog.status,\n dailylog.done_percentage,bu.bu_name \
                       \nFROM bu\njoin dailylog_bu on bu.id= dailylog_bu.bu_id \
                       \n join dailylog on dailylog_bu.dailylog_id= \
                       dailylog.id where dailylog.id= :id;

#BU_QUERIES
select_bu_all = select * from bu

select_bu_by_bu_name = select id from bu where bu_name= :bu_name;

select_daily_assign_title_by_task_id = SELECT  title FROM \
                                       indorama_poly.assign_task join dailylog \
                                       on assign_task.id= \
                                       dailylog.assign_task_id where \
                                       dailylog.assign_task_id= \
                                       :assign_task_id;  

select_dailylog_bu_by_id = SELECT * FROM indorama_poly.dailylog_bu where \
                           dailylog_id = :dailylog_id;

select_dailylog_by_title = SELECT indorama_poly.assign_task.id as assigntask_id, \
                           indorama_poly.dailylog.id, indorama_poly.assign_task.title as title, \
                           indorama_poly.dailylog.description as description, indorama_poly.assign_task.assigned_to as assigned_to, \
                           indorama_poly.dailylog.done_percentage as done_percentage,indorama_poly.dailylog.shift, indorama_poly.dailylog.machine, \
                           indorama_poly.dailylog.timefrom, indorama_poly.dailylog.timeto,indorama_poly.dailylog.spare_parts, indorama_poly.dailylog.attendby, \
                           indorama_poly.dailylog.jobtype, indorama_poly.dailylog.recordtype, indorama_poly.dailylog.target_date as target_date, \
                           indorama_poly.dailylog.status as status, indorama_poly.dailylog.last_edit, indorama_poly.bu.bu_name as bu_name \
						   from indorama_poly.dailylog, indorama_poly.assign_task, indorama_poly.bu, indorama_poly.dailylog_bu \
                           where indorama_poly.dailylog.assign_task_id= indorama_poly.assign_task.id and indorama_poly.dailylog.id= indorama_poly.dailylog_bu.dailylog_id \
						   and indorama_poly.dailylog_bu.bu_id= indorama_poly.bu.id and indorama_poly.assign_task.title= :title;

select_dailylogs_all = select dailylog.id, dailylog.last_edit, shift, machine, \
                       description, timefrom, timeto, spare_parts, attendby, \
                       jobtype, recordtype, \
                       dailylog.status,dailylog.done_percentage, \
                       bu.bu_name,assign_task.title from dailylog join \
                       assign_task on dailylog.assign_task_id= assign_task.id \
                       join dailylog_bu on dailylog.id= \
                       dailylog_bu.dailylog_id join bu on dailylog_bu.bu_id= \
                       bu.id;

select_description_and_id = SELECT indorama_poly.dailylog.id, \
                            indorama_poly.dailylog.assign_task_id, \
                            indorama_poly.dailylog.target_date, \
                            indorama_poly.dailylog.shift, \
                            indorama_poly.dailylog.machine, \
                            indorama_poly.dailylog.description, \
                            indorama_poly.dailylog.timefrom, \
                            indorama_poly.dailylog.timeto, \
                            indorama_poly.dailylog.spare_parts, \
                            indorama_poly.dailylog.attendby, \
                            indorama_poly.dailylog.jobtype, \
                            indorama_poly.dailylog.recordtype, \
                            indorama_poly.dailylog.status, \
                            indorama_poly.dailylog.last_edit, \
                            indorama_poly.dailylog.done_percentage, \
                            indorama_poly.bu.bu_name  FROM \
                            indorama_poly.dailylog join dailylog_bu on \
                            dailylog.id= dailylog_bu.dailylog_id join bu on \
                            dailylog_bu.bu_id= bu.id where \
                            indorama_poly.dailylog.description =:description \
                            and indorama_poly.dailylog.id=:id;\n\n

select_isexist_assigntask_title = SELECT count(title) FROM \
                                  indorama_poly.assign_task WHERE title = \
                                  :title

select_pcr_exists = SELECT count(users_id) FROM password_change_requests WHERE \
                    users_id= :users_id

select_pcr_hash_id = SELECT * FROM password_change_requests WHERE hash_id= \
                     :hash_id

#USER_QUERIES
select_realname = SELECT id,realname FROM indorama_poly.users

select_role_byuserid = select role from roles join users_roles on roles.id = \
                       users_roles.roles_id where users_roles.users_id= \
                       :users_id

select_roles_all = select * from roles

select_username = SELECT username FROM users WHERE realname in( :realname)

select_users = SELECT * FROM users

select_users_exists = SELECT count(username) FROM users WHERE username= \
                      :username

select_users_id = SELECT * FROM users WHERE id= :id

select_users_username = \nSELECT users.id, username, realname, phone, address, \
                        state, city, zipcode, enabled, notification, \
                        birthdate, password, roles.role FROM users \njoin \
                        users_roles  on users.id=users_roles.users_id join \
                        roles on users_roles.roles_id=roles.id WHERE username= \
                        :username

select_usersbu_all = select users.id as usersId, realname, username, phone, \
                     birthdate, enabled, notification, address, city, state, \
                     zipcode from users join users_bu on users.id = \
                     users_bu.users_id join bu on users_bu.bu_id = bu.id

update_assign_task = update indorama_poly.assign_task set title= :title, \
                     assigned_to= :assigned_to, priority= \
                     :priority,target_date= :target_date,done_percentage= \
                     :done_percentage where id= :id

update_daily_bu = update dailylog_bu set bu_id = :bu_id, dailylog_id= \
                  :dailylog_id where id= :id 

update_dailylog = update indorama_poly.dailylog set assign_task_id= \
                  :assign_task_id, target_date= :target_date, shift= :shift, \
                  machine= :machine, description= :description, timefrom= \
                  :timefrom, timeto= :timeto, spare_parts= :spare_parts, \
                  attendby= :attendby, jobtype= :jobtype, recordtype= \
                  :recordtype, status= :status, done_percentage= \
                  :done_percentage where id= :id

update_pcr = update password_change_requests set hash_id= :hash_id, time= \
             :time, no_of_attempts= :no_of_attempts where users_id= :users_id

update_roles_byuser = update users inner join users_roles on \
                      users_roles.users_id = users.id  set \
                      users_roles.roles_id = (select id from roles where role= \
                      :role) where users.username= :username

update_users = update users set realname= :realname, phone= :phone, state= \
               :state, city= :city,zipcode= :zipcode, address= :address, \
               notification= :notification, enabled= :enabled, password = \
               :password where username= :username

update_users_password = update users set  password = :password where id= :id
